. 比如Rserve 包，  是一个基于 Tcp/ip 的服务器， 通过二进制协议传输数据， 提供远程连接， 使得客户端语言能够调用R.

  目前 Rserve 作为一个package 发布在CRAN上， 可以通过使用install.package("Rserve") 进行安装。

  ## 上面的安装方法在R 2.3.2 中不行。。。。。

  可以通过 菜单进行操作: 

  1. 选择 CRAN Mirror

     "Packages" -> "Set CRAN mirror..."  , 选择 "China (Beijing 2)", 然后点击 "OK"

  2. "Packages" -> "Install Packgaes...", 选择 "Rserve", 然后点击"OK"
 
     就会下载 Rserve

trying URL 'http://mirror.bjtu.edu.cn/cran/bin/windows/contrib/3.2/Rserve_1.7-3.zip'
Content type 'application/zip' length 711910 bytes (695 KB)
downloaded 695 KB

package ‘Rserve’ successfully unpacked and MD5 sums checked

The downloaded binary packages are in
        C:\Documents and Settings\Administrator\Local Settings\Temp\RtmpoJGUeN\downloaded_packages

   3. 启动 "Rserve"

   > library(Rserve)
Warning message:
package ‘Rserve’ was built under R version 3.2.2 
> Rserve()
Starting Rserve...
 "C:\PROGRA~1\R\R-32~1.0\library\Rserve\libs\i386\Rserve.exe"  
> 


    由于当前使用的R版本是3.2.0，  而 Rserve 包实在3.2.2 版本下编译的，所以有个警告提示。 估计问题不大， 先不更新R版本了。

  4. 下载 Rserve 的 JAR

     http://www.rforge.net/Rserve/

     下载 REngine.jar  和  RserveEngine.jar 

     然后把这2个jar 拷贝到 Netbeans 相应 project 中的  库里.
  
  5. 在 Java 中使用 Rserve (下面的例子都是在 Groovy 中测试的， 所以代码与java 稍有不同，没有分号结尾)

     import rosuda.REngine.REXP
     import rosuda.REngine.Rserve.RConnection

     上面2个类就能使用简单的R语言接口了. 这2个类是之前的2个JAR中的.

     try {

           RConnection c = new RConnection()

           REXP x = c.eval("R.version.string")

           println x.asString()

           double[] d= c.eval("rnorm(100)").asDoubles()
           println c.eval("rnorm(100)").asDoubles()


       } catch (Exception e) {

            e.printStackTrace()

       }

     运行结果:

         R version 3.2.0 (2015-04-16)
         [0.05465846622856652, -0.37000740576615543, 1.8842027558132757, 2.0581733404490326, -0.5918067119503342, -1.3606225141475445, -0.9766583329257245, 1.1347499856441783, 0.3221189700888309, 1.417822842420027, -0.5203170278768912, 1.1615634755962794, 0.04495304136223546, -1.461473346772707, 3.537759162787939, 0.7379371375785657, 0.552617305517335, -1.2506799428480713, 0.4462830362398736, 0.8838366450570682, 0.05309926962348445, 1.3128559891826916, 2.5850409438973228, 1.4137529737910697, -1.7164864293314992, -0.6948283691312671, -0.615182930389712, -0.6482340974749702, 2.110569133528113, -0.5339288155504915, 0.6118534577943675, 3.2644477306064656, 0.427998113931502, -0.22583550984048126, -1.6053333690884233, -0.3435533881392261, -0.36184252911472115, -0.6442290899512385, 0.005026383091073333, 0.43988445317832026, 0.3052432576235178, -0.004033344371893361, 0.42152648814032523, -1.5310410736394011, 0.6999685769257405, 0.2530305957305652, -0.037022071255995236, -0.3657716823180456, -1.0770875617280844, 1.0655429697870356, -0.2611397984102323, 2.200246393061482, -1.4347066600553309, -0.9309140632947986, -1.7192961001878622, -2.147687348230635, 0.3206437923364597, -2.004156262510032, -0.0877601850696651, -0.0870297111586615, -2.444762009925816, 0.9371250370179358, 0.6019516210674125, 1.3646551443742896, 0.524900005649555, -1.7487273380065347, 1.4682039103837905, -0.8675175890988635, -0.45909080862701956, -0.45582804481871986, -0.7349135332656969, 0.9872917855901718, 1.8158186568152712, -2.096066534401028, 1.0258849760557371, -1.4603052954655658, -0.4804776602138641, 0.5862528339134043, -0.9336483838284052, -0.21213615011645093, -0.8743973044647619, -1.3098117942425478, 1.65523645259092, -0.008034543600378433, -1.352294321837518, 0.20513555979524978, 1.2406255678417253, 0.7322470674543419, 0.20772375967196657, 0.34568183107348227, -0.7352705847778064, -1.5793512414658464, 0.7391737995548094, -0.15826626482285994, 0.8956274221739475, -0.4271539838965841, -0.9891787412277565, -0.16823348683837608, -0.24218223003158196, -1.7168223085182615]

   上面是100 个随机数

  6. 关于Rserve 的客户端连接问题

   因为是socket 安全连接， 限制了客户端的连接数， 使用的端口缺省为6631

    只能连接一次， 一般在初始化的时候，可以启动R 的服务端， 然后再在客户端连接。 然后保留好连接句柄， 后面的使用都用这个句柄即可。

    另外一个可能需要注意的问题： 连接超时问题， 即长时间没有操作的话， 一般socket 通讯会自动断开， 这个目前需要继续验证，如果确认有该问题， 需要增加处理解决机制。 
 
    核查后基本确认， 连接不会自动断开， 之前发生的原因是 包含连接部分的groovy 文件修改后重新编译了， 实际上就是连接被丢弃了。 重新连接即可， 然后又可以使用了。

   如果多次画图的话， 也会出现连接失效的情况。这种情况下， 即便是重启客户端也不行， 可能是服务端也出问题了， 需要重启服务端才可以。

  7. 在Groovy 中调用命令行

     是为了启动 Rserve 的服务端. 或者作为一个应用系统， 应该提供一个启动脚本来搭建运行环境。
          