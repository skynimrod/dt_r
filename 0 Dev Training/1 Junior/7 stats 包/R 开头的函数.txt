. rnorm  --   普通的分布函数  

   r 前缀表示是随机(random)，d = density = 密度，p = probability = 概率, q = quantile = 分位

  dnorm(x, mean = 0, sd = 1, log = FALSE)
  pnorm(q, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
  qnorm(p, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
  rnorm(n, mean = 0, sd = 1)   # n 为产生随机数的个数(长度), mean 是算数平均数, sd 是标准差

  The normal distribution has density

     f(x) = 1/(√(2 π) σ) e^-((x - μ)^2/(2 σ^2))

  where μ is the mean of the distribution and σ the standard deviation.

  例子:

      require(graphics)

      dnorm(0) == 1/sqrt(2*pi)
      dnorm(1) == exp(-1/2)/sqrt(2*pi)
      dnorm(1) == 1/sqrt(2*pi*exp(1))

      ## Using "log = TRUE" for an extended range :
      par(mfrow = c(2,1))
      plot(function(x) dnorm(x, log = TRUE), -60, 50,
              main = "log { Normal density }")
      curve(log(dnorm(x)), add = TRUE, col = "red", lwd = 2)
      mtext("dnorm(x, log=TRUE)", adj = 0)                          # adj = 0 是左对齐
      mtext("log(dnorm(x))", col = "red", adj = 1)                  # adj = 1 是右对齐

      plot(function(x) pnorm(x, log.p = TRUE), -50, 10,
              main = "log { Normal Cumulative }")
      curve(log(pnorm(x)), add = TRUE, col = "red", lwd = 2)
      mtext("pnorm(x, log=TRUE)", adj = 0)
      mtext("log(pnorm(x))", col = "red", adj = 1)

      ## if you want the so-called 'error function'
      erf <- function(x) 2 * pnorm(x * sqrt(2)) - 1
      ## (see Abramowitz and Stegun 29.2.29)
      ## and the so-called 'complementary error function'
      erfc <- function(x) 2 * pnorm(x * sqrt(2), lower = FALSE)
      ## and the inverses
      erfinv <- function (x) qnorm((1 + x)/2)/sqrt(2)
      erfcinv <- function (x) qnorm(x/2, lower = FALSE)/sqrt(2)
